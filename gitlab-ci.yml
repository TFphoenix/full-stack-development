#image: google/cloud-sdk:alpine

run_build:
  image: node:14
  only:
    - master
  stage: test
  script:
    - cd functions
    - npm install
    - npx tsc index.ts && node index.js

deploy_gcloud:
  image: node:14
  only:
    - master
  stage: test
  script:
    # Install CA certs, openssl to https downloads, python for gcloud sdk
    # - apk add --update make ca-certificates openssl python
    # - update-ca-certificates

    # Download and install Google Cloud SDK
    - wget https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.tar.gz
    - tar zxvf google-cloud-sdk.tar.gz && ./google-cloud-sdk/install.sh --quiet --usage-reporting=false --path-update=true
    - PATH="google-cloud-sdk/bin:${PATH}"
    - gcloud --quiet components update
    # - gcloud components install beta

    - echo $SERVICE_ACCOUNT > /tmp/$CI_PIPELINE_ID.json
    - python --version
    - gcloud auth activate-service-account --key-file /tmp/$CI_PIPELINE_ID.json
    - ls -ls
    - gcloud --quiet --project $PROJECT_ID functions deploy getLogs --entry-point getLogs --runtime nodejs14 --trigger-http --allow-unauthenticated --source functions/
    #- gcloud --quiet --project $PROJECT_ID alpha functions add-iam-policy-binding helloWorld --member=allUsers --role=roles/cloudfunctions.invoker

deploy_production:
  stage: deploy
  environment: Production
  only:
    - production
  script:
    - echo $SERVICE_ACCOUNT > /tmp/$CI_PIPELINE_ID.json
    - gcloud auth activate-service-account --key-file /tmp/$CI_PIPELINE_ID.json
    - gcloud --quiet --project $PROJECT_ID functions deploy getLogs --runtime node:14 --trigger-http
  after_script:
    - rm /tmp/$CI_PIPELINE_ID.json
